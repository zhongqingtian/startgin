[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /api/v1/demo/simple/get   --> startgin/routers/api/v1/demo.Get (3 handlers)
[GIN-debug] POST   /api/v1/demo/simple/post  --> startgin/routers/api/v1/demo.Post (3 handlers)
[GIN-debug] PUT    /api/v1/demo/simple/put   --> startgin/routers/api/v1/demo.Put (3 handlers)
[GIN-debug] DELETE /api/v1/demo/simple/delete --> startgin/routers/api/v1/demo.Delete (3 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /api/v1/demo/simple/get   --> startgin/routers/api/v1/demo.Get (3 handlers)
[GIN-debug] POST   /api/v1/demo/simple/post  --> startgin/routers/api/v1/demo.Post (3 handlers)
[GIN-debug] PUT    /api/v1/demo/simple/put   --> startgin/routers/api/v1/demo.Put (3 handlers)
[GIN-debug] DELETE /api/v1/demo/simple/delete --> startgin/routers/api/v1/demo.Delete (3 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2020/08/03 - 15:45:48 | 200 |            0s |             ::1 | GET      "/api/v1/demo/simple/get?user=test&pass=123456"
